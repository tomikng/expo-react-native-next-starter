name: CI

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  lint:
    name: Lint (Node ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['20', '22']
    
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Enable Corepack
        run: corepack enable

      - name: Cache Yarn dependencies
        uses: actions/cache@v4
        with:
          path: |
            .yarn/cache
            .yarn/install-state.gz
          key: ${{ runner.os }}-yarn-node${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-node${{ matrix.node-version }}-

      - name: Install dependencies
        run: yarn install --immutable

      - name: Run Biome linter
        run: yarn lint

  typecheck:
    name: Type Check (Node ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['20', '22']
    
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Enable Corepack
        run: corepack enable

      - name: Cache Yarn dependencies
        uses: actions/cache@v4
        with:
          path: |
            .yarn/cache
            .yarn/install-state.gz
          key: ${{ runner.os }}-yarn-node${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-node${{ matrix.node-version }}-

      - name: Install dependencies
        run: yarn install --immutable

      - name: Build packages
        run: yarn build

      - name: Type check
        run: yarn typecheck

  build:
    name: Build (Node ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    needs: [lint, typecheck]
    strategy:
      matrix:
        node-version: ['20', '22']
    
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Enable Corepack
        run: corepack enable

      - name: Cache Yarn dependencies
        uses: actions/cache@v4
        with:
          path: |
            .yarn/cache
            .yarn/install-state.gz
          key: ${{ runner.os }}-yarn-node${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-node${{ matrix.node-version }}-

      - name: Cache Next.js build cache
        uses: actions/cache@v4
        with:
          path: |
            apps/next/.next/cache
            .turbo
          key: ${{ runner.os }}-nextjs-node${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-node${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}-

      - name: Install dependencies
        run: yarn install --immutable

      - name: Build packages
        run: yarn build

      - name: Build Next.js app
        run: yarn web:prod

      - name: Validate Expo configuration
        run: npx expo-doctor@latest
        working-directory: apps/expo

  test:
    name: Test (Node ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    needs: [lint, typecheck]
    strategy:
      matrix:
        node-version: ['20', '22']
    
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Enable Corepack
        run: corepack enable

      - name: Cache Yarn dependencies
        uses: actions/cache@v4
        with:
          path: |
            .yarn/cache
            .yarn/install-state.gz
          key: ${{ runner.os }}-yarn-node${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-node${{ matrix.node-version }}-

      - name: Install dependencies
        run: yarn install --immutable

      - name: Run tests
        run: yarn test
